legend.outside = TRUE) +
tm_scale_bar(breaks = c(0, 5, 10), text.size  = 0.75,
position = c("right", "bottom"))
# Create a choropleth map of median household income
tm_shape(or_tracts) +
tm_polygons(col = "medincome", style = "quantile", palette = "BuGn", title = "Median Household Income") +
tm_layout(main.title = "Median Household Income in Multnomah County, 2018-2022",
main.title.position = "center",
legend.outside = TRUE) +
tm_scale_bar(breaks = c(0, 5, 10), text.size  = 0.75,
position = c("right", "bottom"))  +
tm_compass(type = "4star", position = c("right", "top"))
# Create a choropleth map of median household income
mult_county_map <- tm_shape(or_tracts) +
tm_polygons(col = "medincome", style = "quantile", palette = "BuGn", title = "Median Household Income") +
tm_layout(main.title = "Median Household Income in Multnomah County, 2018-2022",
main.title.position = "center",
legend.outside = TRUE, frame = FALSE) +
tm_scale_bar(breaks = c(0, 5, 10), text.size  = 0.75,
position = c("right", "bottom"))  +
tm_compass(type = "4star", position = c("right", "top"))
mult_county_map
mult_pfb_map <- tm_shape(or_tracts, unit = "mi") +
tm_polygons(col = "pfb", style = "quantile",palette = "Reds",
title = "% foreign-born") +
tm_layout(main.title = "2018-22 Percent Foreign Born in Multnomah County",
main.title.size = 0.95, main.title.position="center",
legend.outside = TRUE, frame = FALSE, ) +
tm_scale_bar(breaks = c(0, 5, 10), text.size  = 0.75,
position = c("right", "bottom"))  +
tm_compass(type = "4star", position = c("left", "top")) +
tm_polygons(col = "green")
tmap_arrange(mult_pfb_map, mult_county_map)
tmap_save(mult_county_map, "map_multnomah_medianIncome.png")
tmap_mode("view")
mult_pfb_map
tm_shape(or_tracts, unit = "mi") +
tm_polygons(col = "pfb", style = "quantile",palette = "Reds",
title = "% foreign-born") +
tm_layout(main.title = "2018-22 Percent Foreign Born in Multnomah County",
main.title.size = 0.95, main.title.position="center",
legend.outside = TRUE, frame = FALSE, ) +
tm_scale_bar(breaks = c(0, 5, 10), text.size  = 0.75,
position = c("right", "bottom"))  +
tm_compass(type = "4star", position = c("left", "top")) +
tm_polygons(col = "green") + tm_basemap("OpenStreetMap")
tmap_mode("plot")
pl <- places(state = "OR", cb = TRUE, year=2022)
glimpse(pl)
pdx <- filter(pl, NAME == "Portland")
glimpse(pdx)
# cropped version of main spatial object focusing on Portland:
pdx_tracts <- or_tracts %>%
st_buffer(1e-5) %>%
st_intersection(pdx)
tm_shape(pdx_tracts) +
tm_polygons(col = "pfb", style = "quantile",palette = "Reds",
title = "% foreign-born")
api_key <-  "94a98843fc99d4851ad1aafc71cddde2bfb1385b"
library(tidycensus)
county_subdivision_data <- get_acs(geography = "county subdivision",
year = 2022,
variables = "B25064_001",
state = "OR",
county = "Multnomah",
survey = "acs5",
output = "wide",
key = api_key)
tract_data <- get_acs(geography = "tract",
year = 2022,
variables = "B25064_001",
state = "OR",
county = "Multnomah",
survey = "acs5",
output = "wide",
key = api_key)
block_group_data <- get_acs(geography = "block group",
year = 2022,
variables = "B25064_001",
state = "OR",
county = "Multnomah",
survey = "acs5",
output = "wide",
key = api_key)
# View the first few rows of the data for each geography
head(county_subdivision_data)
head(tract_data)
head(block_group_data)
View(block_group_data)
county_subdivision_data <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_data <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_data <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
View(block_group_data)
View(county_subdivision_data)
View(tract_data)
# Load required libraries
library(tidycensus)
library(tidyverse)
library(sf)
library(tmap)
# Set API key
census_api_key <- "94a98843fc99d4851ad1aafc71cddde2bfb1385b"
# Define function to get and process ACS data
get_process_acs_data <- function(geography, variables, state, county) {
data <- get_acs(geography = geography,
variables = variables,
state = state,
county = county,
survey = "acs5",
year = 2019,
key = census_api_key)
# Rename variables for better readability
names(data) <- c("geometry", "median_rent")
return(data)
}
# Get and process data for county subdivision, tract, and block group
county_subdivision_data <- get_process_acs_data(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_data <- get_process_acs_data(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_data <- get_process_acs_data(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Plot choropleth maps
tm_shape(county_subdivision_data) +
tm_fill(col = "median_rent", style = "cont", palette = "Blues") +
tm_borders() +
tm_layout(title = "Median Gross Rent at County Subdivision Level") +
tm_legend(outside = TRUE)
# Load required libraries
library(tidycensus)
library(tidyverse)
library(sf)
library(tmap)
# Set API key
census_api_key <- "94a98843fc99d4851ad1aafc71cddde2bfb1385b"
# Define function to get and process ACS data
get_process_acs_data <- function(geography, variables, state, county) {
data <- get_acs(geography = geography,
variables = variables,
state = state,
county = county,
survey = "acs5",
year = 2019,
key = census_api_key,
geometry = TRUE) # Request geometry data
# Convert to sf object
data <- st_as_sf(data)
# Rename variables for better readability
names(data) <- c("median_rent", "geometry")
return(data)
}
# Get and process data for county subdivision, tract, and block group
county_subdivision_data <- get_process_acs_data(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_data <- get_process_acs_data(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_data <- get_process_acs_data(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Plot choropleth maps
tm_shape(county_subdivision_data) +
tm_fill(col = "median_rent", style = "cont", palette = "Blues") +
tm_borders() +
tm_layout(title = "Median Gross Rent at County Subdivision Level") +
tm_legend(outside = TRUE)
# Load required libraries
library(tidycensus)
library(tidyverse)
library(sf)
library(tmap)
# Set API key
census_api_key <- "94a98843fc99d4851ad1aafc71cddde2bfb1385b"
# Define function to get and process ACS data
get_process_acs_data <- function(geography, variables, state, county) {
data <- get_acs(geography = geography,
variables = variables,
state = state,
county = county,
survey = "acs5",
year = 2019,
key = census_api_key,
geometry = TRUE) # Request geometry data
# Convert to sf object
data <- st_as_sf(data)
# Rename variables for better readability
names(data) <- c("median_rent", "geometry")
# Set the geometry column explicitly
st_geometry(data) <- "geometry"
return(data)
}
# Get and process data for county subdivision, tract, and block group
county_subdivision_data <- get_process_acs_data(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_data <- get_process_acs_data(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_data <- get_process_acs_data(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Plot choropleth maps
tm_shape(county_subdivision_data) +
tm_fill(col = "median_rent", style = "cont", palette = "Blues") +
tm_borders() +
tm_layout(title = "Median Gross Rent at County Subdivision Level") +
tm_legend(outside = TRUE)
# Load required libraries
library(tidycensus)
library(tidyverse)
library(sf)
library(tmap)
# Set API key
census_api_key <- "94a98843fc99d4851ad1aafc71cddde2bfb1385b"
# Define function to get and process ACS data
get_process_acs_data <- function(geography, variables, state, county) {
data <- get_acs(geography = geography,
variables = variables,
state = state,
county = county,
survey = "acs5",
year = 2019,
key = census_api_key,
geometry = TRUE) # Request geometry data
# Convert to sf object
data <- st_as_sf(data)
# Set the geometry column explicitly
st_geometry(data) <- "geometry"
# Rename variables for better readability
names(data) <- c("median_rent", "geometry")
return(data)
}
# Get and process data for county subdivision, tract, and block group
county_subdivision_data <- get_process_acs_data(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_data <- get_process_acs_data(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_data <- get_process_acs_data(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Plot choropleth maps
tm_shape(county_subdivision_data) +
tm_fill(col = "median_rent", style = "cont", palette = "Blues") +
tm_borders() +
tm_layout(title = "Median Gross Rent at County Subdivision Level") +
tm_legend(outside = TRUE)
# Fetch gross rent data for each geography resolution
county_subdivision_rent <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_rent <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_rent <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Create choropleth maps for each geography resolution
tm_shape(county_subdivision_rent) +
tm_polygons(col = "B25064_001", style = "quantile", palette = "BuGn", title = "Gross Rent") +
tm_layout(main.title = "Gross Rent in Multnomah County by County Subdivision")
# Fetch gross rent data for Multnomah County at different geography resolutions
county_subdivision_rent <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_rent <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_rent <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Create choropleth maps for each geography resolution
tm_shape(county_subdivision_rent) +
tm_polygons(col = "B25064_001", style = "quantile", palette = "BuGn", title = "Gross Rent") +
tm_layout(main.title = "Gross Rent in Multnomah County (County Subdivision)")
# Fetch gross rent data for county subdivisions
county_subdivision_rent <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
# Check the class of the fetched data
class(county_subdivision_rent)
# Convert the fetched data to sf format
county_subdivision_rent_sf <- st_as_sf(county_subdivision_rent)
# Load necessary libraries
library(sf)
library(tmap)
# Load the spatial dataset for Multnomah County's county subdivisions
county_subdivisions <- st_read("path_to_shapefile/county_subdivisions.shp")
# Put all necessary libraries here
library(tidyverse)
library(leaflet)
library(tidycensus)
library(tidyverse)
library(tidycensus)
library(flextable)
library(sf)
library(tigris)
library(tmap)
library(RColorBrewer)
# Load necessary libraries
library(sf)
library(tmap)
# Load the spatial dataset for Multnomah County's county subdivisions
county_subdivisions <- st_read("path_to_shapefile/county_subdivisions.shp")
county_subdivision_data <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_data <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_data <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Fetch gross rent data for Multnomah County at different geography resolutions
county_subdivision_rent <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_rent <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_rent <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
# Create choropleth maps for each geography resolution
tm_shape(county_subdivision_rent) +
tm_polygons(col = "B25064_001", style = "quantile", palette = "BuGn", title = "Gross Rent") +
tm_layout(main.title = "Gross Rent in Multnomah County (County Subdivision)")
# Fetch gross rent data for Multnomah County at different geography resolutions
county_subdivision_rent <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_rent <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_rent <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
tm_shape(county_subdivision_rent) +
tm_polygons(col = "estimate", style = "quantile", palette = "BuGn", title = "Median Household Income") +
tm_layout(main.title = "Median Household Income in Multnomah County, 2018-2022",
main.title.position = "center",
legend.outside = TRUE)
# Fetch gross rent data for Multnomah County at different geography resolutions
county_subdivision_rent <- get_acs(geography = "county subdivision",
variables = "B25064_001",
state = "OR", county = "Multnomah" )
tract_rent <- get_acs(geography = "tract",
variables = "B25064_001",
state = "OR", county = "Multnomah")
block_group_rent <- get_acs(geography = "block group",
variables = "B25064_001",
state = "OR", county = "Multnomah")
class(county_subdivision_rent)
tm_shape(county_subdivision_rent) +
tm_polygons(col = "estimate", style = "quantile", palette = "BuGn", title = "Median Household Income") +
tm_layout(main.title = "Median Household Income in Multnomah County, 2018-2022",
main.title.position = "center",
legend.outside = TRUE)
api_key <-  "94a98843fc99d4851ad1aafc71cddde2bfb1385b"
subdiv <- get_acs(
geography = "county subdivision", # Correct geography level for county data
variables = "B25064_001", # Median gross rent
survey = "acs5",
state = "OR",
county = "Multnomah", # Correct argument name is 'county'
year = 2021,
geometry = TRUE)
tract <- get_acs(
geography = "tract", # Correct geography level for county data
variables = "B25064_001", # Median gross rent
survey = "acs5",
state = "OR",
county = "Multnomah", # Correct argument name is 'county'
year = 2021,
geometry = TRUE)
block_group <- get_acs(
geography = "block group", # Correct geography level for county data
variables = "B25064_001", # Median gross rent
survey = "acs5",
state = "OR",
county = "Multnomah", # Correct argument name is 'county'
year = 2021,
geometry = TRUE)
subdiv %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c() +
labs(fill = "Median Gross Rent") +
theme_void()
tract %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c() +
labs(fill = "Median Gross Rent") +
theme_void()
block_group %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c() +
labs(fill = "Median Gross Rent") +
theme_void()
biketown_data$EndDate <- mdy(biketown_data$EndDate)
# Do not modify this chunk.
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Put all necessary libraries here
library(tidyverse)
library(leaflet)
library(tidycensus)
library(tidyverse)
library(tidycensus)
library(flextable)
library(sf)
library(tigris)
library(tmap)
library(RColorBrewer)
biketown_data <- bind_rows(readr::read_csv("https://s3.amazonaws.com/biketown-tripdata-public/2017_01.csv"),
readr::read_csv("https://s3.amazonaws.com/biketown-tripdata-public/2017_07.csv"),
readr::read_csv("https://s3.amazonaws.com/biketown-tripdata-public/2017_11.csv")) %>%
select(StartDate, StartTime, EndDate, EndTime, Distance_Miles,
BikeID, StartLongitude, StartLatitude )
biketown_data %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = ~StartLongitude, lat = ~StartLatitude)
biketown_data <- biketown_data %>%
mutate(month = month(ymd_hms(EndDate)))
biketown_data$EndDate <- mdy(biketown_data$EndDate)
biketown_data <- biketown_data %>%
mutate(month = month(EndDate))
month_palette <- colorFactor(palette = "Set3", domain = unique(biketown_data$month))
biketown_data %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = ~StartLongitude, lat = ~StartLatitude,
fillColor = ~month_palette(month),
color = "white", radius = 5, opacity = 1) %>%
addLegend(position = "bottomright",
colors = month_palette(unique(biketown_data$month)),
labels = month.abb[unique(biketown_data$month)],
title = "Month")
subdiv <- get_acs(
geography = "county subdivision", # Correct geography level for county data
variables = "B25064_001", # Median gross rent
survey = "acs5",
state = "OR",
county = "Multnomah", # Correct argument name is 'county'
year = 2021,
geometry = TRUE)
tract <- get_acs(
geography = "tract", # Correct geography level for county data
variables = "B25064_001", # Median gross rent
survey = "acs5",
state = "OR",
county = "Multnomah", # Correct argument name is 'county'
year = 2021,
geometry = TRUE)
block_group <- get_acs(
geography = "block group", # Correct geography level for county data
variables = "B25064_001", # Median gross rent
survey = "acs5",
state = "OR",
county = "Multnomah", # Correct argument name is 'county'
year = 2021,
geometry = TRUE)
subdiv %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c() +
labs(fill = "Median Gross Rent") +
theme_void()
tract %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c() +
labs(fill = "Median Gross Rent") +
theme_void()
block_group %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c() +
labs(fill = "Median Gross Rent") +
theme_void()
# Do not modify this chunk.
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Put all necessary libraries here
library(tidyverse)
library(tidytext)
# Ensure the textdata package is installed
if (!requireNamespace("textdata", quietly = TRUE)) {
install.packages("textdata")
}
# Load the textdata package
library(textdata)
# Before knitting your document one last time, you will have to download the AFINN lexicon explicitly
lexicon_afinn()
